self.types[0:self.n_omig_ess_ch] = [Binary(1) for i in range(self.n_omig_ess_ch)]
self.types[self.n_omig_ess_ch:self.n_omig_ess_dch] = [Binary(1) for i in range(self.n_omig_ess_dch-self.n_omig_ess_ch)]
self.types[self.n_omig_ess_dch:self.n_p_sub_b] = [Real(-1e6,1e6) for i in range(self.n_p_sub_b-self.n_omig_ess_dch)]
self.types[self.n_p_sub_b:self.n_q_sub] = [Real(-1e6,1e6) for i in range(self.n_q_sub-self.n_p_sub_b)]
self.types[self.n_q_sub:self.n_p_ch] = [Real(0,1e6) for i in range(self.n_p_ch-self.n_q_sub)]
self.types[self.n_p_ch:self.n_p_dch] = [Real(0,1e6) for i in range(self.n_p_dch-self.n_p_ch)]
self.types[self.n_p_dch:self.n_u_bus] = [Real(0,1e6) for i in range(self.n_u_bus-self.n_p_dch)]
self.types[self.n_u_bus:self.n_q_pv] = [Real(-1e6,1e6) for i in range(self.n_q_pv-self.n_u_bus)]
self.types[self.n_q_pv:self.n_p_line] = [Real(-1e6,1e6) for i in range(self.n_p_line-self.n_q_pv)]
self.types[self.n_p_line:self.n_q_line] = [Real(-1e6,1e6) for i in range(self.n_q_line-self.n_p_line)]
self.types[self.n_q_line:self.n_i_line] = [Real(0,1e6) for i in range(self.n_i_line-self.n_q_line)]
self.types[self.n_i_line:self.n_ess_w] = [Binary(1) for i in range(self.n_ess_w-self.n_i_line)]
self.types[self.n_ess_w:self.n_v_1] = [Real(0,1e6) for i in range(self.n_v_1-self.n_ess_w)]
self.types[self.n_v_1:self.n_v_2] = [Real(0,1e6) for i in range(self.n_v_2-self.n_v_1)]
self.types[self.n_v_2:self.n_tap_k] = [Binary(1) for i in range(self.n_tap_k-self.n_v_2)]
self.types[self.n_tap_k:self.n_E_ess] = [Real(0,1e6) for i in range(self.n_E_ess-self.n_tap_k)]
self.types[self.n_E_ess:self.n_p_ess] = [Real(0,1e6) for i in range(self.n_p_ess-self.n_E_ess)]
self.types[self.n_p_ess:self.n_ch_ess] = [Real(0,1e6) for i in range(self.n_ch_ess-self.n_p_ess)]
self.types[self.n_ch_ess:self.n_dis_ess] = [Real(0,1e6) for i in range(self.n_dis_ess-self.n_ch_ess)]
self.types[self.n_dis_ess:self.n_pv_cap] = [Real(0,1e6) for i in range(self.n_pv_cap-self.n_dis_ess)]
self.types[self.n_pv_cap:self.n_power_pv] = [Real(0,1e6) for i in range(self.n_power_pv-self.n_pv_cap)]
self.types[self.n_power_pv:self.n_q_ess] = [Real(-1e6,1e6) for i in range(self.n_q_ess-self.n_power_pv)]
self.types[self.n_q_ess:self.n_abs_p_line] = [Real(-1e6,1e6) for i in range(self.n_abs_p_line-self.n_q_ess)]